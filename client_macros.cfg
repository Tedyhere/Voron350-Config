[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

#####################################################################
#   Macros
#####################################################################
[gcode_macro PRIMING]
gcode:
    M106 S255                      ;partcooling fan max             .1
    CLEAN                          ;call clean macro                .2
    G1  X180 Y0 F30000              ;move to purge position    X/Y  .3
    G1  Z0.3 F5000                  ;move to purge position    Z    .4
    G91                            ;incremental positioning         .5
    G1  E14 F500                   ;prime hotend                    .6
    G1  Z10 E25 F250               ;purge and move up               .7
    G1  Z10 F5000                  ;move up by 10                   .8
    G1  X-30 Z-20.1 F5000          ;move to wiping start      X/Z   .9
    G1  X-20                       ;wipe end                    X   .10
    G1  Z10  F5000                 ;move up                         .11
    G82                            ;extruder absolute               .12
    G92 E0.0                       ;extruder reset                  .13               
    G90                            ;absolute positioning            .14
    M107                           ;partcooling fan off             .15

[gcode_macro CLEAN]
gcode:
    M204 S6000                     ;set acceleration to 6000        .16
    G1 X180 Y30 F30000             ;move to position          X/Y   .17
    G1 Z0.8 F5000                  ;move to position          Z     .18
    G1 Y0 F30000                   ;kik the prime tower off         .19
[gcode_macro PARK]
gcode:
    G1 X10 Y5
    G1 Z10
    G1 Z0 F1000


[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:


      g90
      #Get Printer built volume dimensions
      {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
      {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
      {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

      #Get Nozzle diameter and filament width for conditioning
      {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
      {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

      #Set Start coordinates of priming lines
      {% set X_START = 5.0|default(10.0)|float %}
      {% set Y_START = 1.0|default(20.0)|float %}

      #Calculate Primer line extrusion volume and filament length
      {% set PRIMER_WIDTH = 0.75 * NOZZLE %}                    
      {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}           
      {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}    
      {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}    
      {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}          
      {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}      

      #Get Bed and Extruder temperature from Slicer GCode
      {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
                                      
      #Home
    G28 ; home all axes
    # QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed 

      #Heat bed
      M117 Heating Bed
      M190 S{BED_TEMP}                               
      M117 Probing Bed
      BED_MESH_CALIBRATE
      G28

        

      #Precondition extruder
      M117 Heating Extruder
      PARK
      M109 S{EXTRUDER_TEMP} T0
      M117 Priming
      G1 Z10
      PRIMING
      M117 Printing

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600  ; park nozzle at rear


# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		# Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
		#G90
		#G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
		#G28 X Y
		#G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 5} F{speed*60}

	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			
			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED